diff --git a/net/mac80211/Makefile b/net/mac80211/Makefile
index 77c02a0..262ed04 100644
--- a/net/mac80211/Makefile
+++ b/net/mac80211/Makefile
@@ -67,6 +67,5 @@ mac80211-$(CPTCFG_MAC80211_RC_MINSTREL) += $(rc80211_minstrel-y)
 
 obj-y += tests/
 
-mac80211-y += wbrf.o
 
 ccflags-y += -DDEBUG
diff --git a/net/mac80211/chan.c b/net/mac80211/chan.c
index e856772..b406fcd 100644
--- a/net/mac80211/chan.c
+++ b/net/mac80211/chan.c
@@ -538,7 +538,6 @@ static void _ieee80211_change_chanctx(struct ieee80211_local *local,
 	WARN_ON(ieee80211_chanctx_refcount(local, ctx) > 1 &&
 		!cfg80211_chandef_compatible(&ctx->conf.def, &chanreq->oper));
 
-	ieee80211_remove_wbrf(local, &ctx->conf.def);
 
 	if (!cfg80211_chandef_identical(&ctx->conf.def, &chanreq->oper)) {
 		if (ctx->conf.def.width != chanreq->oper.width)
@@ -554,7 +553,6 @@ static void _ieee80211_change_chanctx(struct ieee80211_local *local,
 	/* check if min chanctx also changed */
 	changed |= _ieee80211_recalc_chanctx_min_def(local, ctx, rsvd_for, false);
 
-	ieee80211_add_wbrf(local, &ctx->conf.def);
 
 	drv_change_chanctx(local, ctx, changed);
 
@@ -694,7 +692,6 @@ static int ieee80211_add_chanctx(struct ieee80211_local *local,
 
 	lockdep_assert_wiphy(local->hw.wiphy);
 
-	ieee80211_add_wbrf(local, &ctx->conf.def);
 
 	/* turn idle off *before* setting channel -- some drivers need that */
 	changed = ieee80211_idle_off(local);
@@ -749,7 +746,6 @@ static void ieee80211_del_chanctx(struct ieee80211_local *local,
 	if (!skip_idle_recalc)
 		ieee80211_recalc_idle(local);
 
-	ieee80211_remove_wbrf(local, &ctx->conf.def);
 }
 
 static void ieee80211_free_chanctx(struct ieee80211_local *local,
diff --git a/net/mac80211/ieee80211_i.h b/net/mac80211/ieee80211_i.h
index 2a91006..8adfdde 100644
--- a/net/mac80211/ieee80211_i.h
+++ b/net/mac80211/ieee80211_i.h
@@ -1614,7 +1614,6 @@ struct ieee80211_local {
 	/* extended capabilities provided by mac80211 */
 	u8 ext_capa[8];
 
-	bool wbrf_supported;
 };
 
 static inline struct ieee80211_sub_if_data *
@@ -2709,10 +2708,6 @@ void ieee80211_process_neg_ttlm_res(struct ieee80211_sub_if_data *sdata,
 int ieee80211_req_neg_ttlm(struct ieee80211_sub_if_data *sdata,
 			   struct cfg80211_ttlm_params *params);
 
-void ieee80211_check_wbrf_support(struct ieee80211_local *local);
-void ieee80211_add_wbrf(struct ieee80211_local *local, struct cfg80211_chan_def *chandef);
-void ieee80211_remove_wbrf(struct ieee80211_local *local, struct cfg80211_chan_def *chandef);
-
 #if IS_ENABLED(CPTCFG_MAC80211_KUNIT_TEST)
 #define EXPORT_SYMBOL_IF_MAC80211_KUNIT(sym) EXPORT_SYMBOL_IF_KUNIT(sym)
 #define VISIBLE_IF_MAC80211_KUNIT
diff --git a/net/mac80211/main.c b/net/mac80211/main.c
index 79c77af..7975454 100644
--- a/net/mac80211/main.c
+++ b/net/mac80211/main.c
@@ -1580,7 +1580,6 @@ int ieee80211_register_hw(struct ieee80211_hw *hw)
 	debugfs_hw_add(local);
 	rate_control_add_debugfs(local);
 
-	ieee80211_check_wbrf_support(local);
 
 #ifdef CONFIG_INET
 	local->ifa_notifier.notifier_call = ieee80211_ifa_changed;
diff --git a/net/mac80211/wbrf.c b/net/mac80211/wbrf.c
deleted file mode 100644
index 3a86123..0000000
--- a/net/mac80211/wbrf.c
+++ /dev/null
@@ -1,93 +0,0 @@
-// SPDX-License-Identifier: GPL-2.0
-/*
- * Wifi Band Exclusion Interface for WLAN
- * Copyright (C) 2023 Advanced Micro Devices
- *
- */
-
-#include <linux/acpi_amd_wbrf.h>
-#include <linux/units.h>
-#include <net/cfg80211.h>
-#include "ieee80211_i.h"
-
-void ieee80211_check_wbrf_support(struct ieee80211_local *local)
-{
-	struct wiphy *wiphy = local->hw.wiphy;
-	struct device *dev;
-
-	if (!wiphy)
-		return;
-
-	dev = wiphy->dev.parent;
-	if (!dev)
-		return;
-
-	local->wbrf_supported = acpi_amd_wbrf_supported_producer(dev);
-}
-
-static void get_chan_freq_boundary(u32 center_freq, u32 bandwidth, u64 *start, u64 *end)
-{
-	bandwidth *= KHZ_PER_MHZ;
-	center_freq *= KHZ_PER_MHZ;
-
-	*start = center_freq - bandwidth / 2;
-	*end = center_freq + bandwidth / 2;
-
-	/* Frequency in Hz is expected */
-	*start = *start * HZ_PER_KHZ;
-	*end = *end * HZ_PER_KHZ;
-}
-
-static void get_ranges_from_chandef(struct cfg80211_chan_def *chandef,
-				    struct wbrf_ranges_in_out *ranges_in)
-{
-	u64 start_freq1, end_freq1;
-	u64 start_freq2, end_freq2;
-	int bandwidth;
-
-	bandwidth = nl80211_chan_width_to_mhz(chandef->width);
-
-	get_chan_freq_boundary(chandef->center_freq1, bandwidth, &start_freq1, &end_freq1);
-
-	ranges_in->band_list[0].start = start_freq1;
-	ranges_in->band_list[0].end = end_freq1;
-	ranges_in->num_of_ranges = 1;
-
-	if (chandef->width == NL80211_CHAN_WIDTH_80P80) {
-		get_chan_freq_boundary(chandef->center_freq2, bandwidth, &start_freq2, &end_freq2);
-
-		ranges_in->band_list[1].start = start_freq2;
-		ranges_in->band_list[1].end = end_freq2;
-		ranges_in->num_of_ranges++;
-	}
-}
-
-void ieee80211_add_wbrf(struct ieee80211_local *local, struct cfg80211_chan_def *chandef)
-{
-	struct wbrf_ranges_in_out ranges_in = {0};
-	struct device *dev;
-
-	if (!local->wbrf_supported)
-		return;
-
-	dev = local->hw.wiphy->dev.parent;
-
-	get_ranges_from_chandef(chandef, &ranges_in);
-
-	acpi_amd_wbrf_add_remove(dev, WBRF_RECORD_ADD, &ranges_in);
-}
-
-void ieee80211_remove_wbrf(struct ieee80211_local *local, struct cfg80211_chan_def *chandef)
-{
-	struct wbrf_ranges_in_out ranges_in = {0};
-	struct device *dev;
-
-	if (!local->wbrf_supported)
-		return;
-
-	dev = local->hw.wiphy->dev.parent;
-
-	get_ranges_from_chandef(chandef, &ranges_in);
-
-	acpi_amd_wbrf_add_remove(dev, WBRF_RECORD_REMOVE, &ranges_in);
-}
